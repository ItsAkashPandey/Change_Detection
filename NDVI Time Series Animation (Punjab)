/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var table = ee.FeatureCollection("users/AkashPandey/Shapefiles/india_administrative_state_boundary"),
    geometry = /* color: #0b4a8b */ee.Geometry.Polygon(
        [[[73.96025169728793, 30.206568755587934],
          [73.89708031056918, 29.983193746886574],
          [74.50682152150668, 29.933221921185055],
          [75.04789818166293, 29.876080519991017],
          [75.17149437306918, 29.63286458949791],
          [75.27037132619418, 29.551661641724866],
          [75.75926292775668, 29.814140371934432],
          [75.91307152150668, 29.73546874476586],
          [76.34428490041293, 30.149584836973947],
          [76.41569603322543, 30.173332141326902],
          [76.59697044728793, 30.078308625138927],
          [76.62718284963168, 30.206568755587934],
          [76.54478538869418, 30.263519699684725],
          [76.89634788869418, 30.38680011416727],
          [76.81669700978793, 30.656524599342905],
          [76.76176536916293, 30.793465029299373],
          [76.80571068166293, 30.84064072978466],
          [76.61344993947543, 31.099692171457445],
          [76.36351097463168, 31.3885241875626],
          [76.19047630666293, 31.3158124222701],
          [75.94053734181918, 31.800270865849505],
          [75.74003685353793, 32.084615087188794],
          [75.63566673635043, 32.10090320704772],
          [75.5958412968973, 32.08112439802044],
          [75.58691490529574, 32.08694213923431],
          [75.63292015431918, 32.18811151884024],
          [75.65008629201449, 32.23458849595262],
          [75.65472114919223, 32.249688398313225],
          [75.68974007009066, 32.2668179397339],
          [75.71051109670199, 32.27393010452908],
          [75.72819221852816, 32.27378496388125],
          [75.78243721364535, 32.30251828293404],
          [75.81470955251254, 32.34096024064703],
          [75.85693825124301, 32.38156042182965],
          [75.89779365895785, 32.394171765209954],
          [75.92148292897738, 32.39533134056487],
          [75.92405784963168, 32.405911777778755],
          [75.91272819875277, 32.418519720313235],
          [75.88903892873324, 32.4483659847018],
          [75.84766853688754, 32.49239290437867],
          [75.83136070607699, 32.49818431720255],
          [75.7771157109598, 32.46936835207533],
          [75.73196876882113, 32.454594783704],
          [75.73711861012973, 32.43865978863401],
          [75.72939384816684, 32.42083823061314],
          [75.7111977422098, 32.410839229373494],
          [75.69025505422152, 32.393447023051756],
          [75.6617592656473, 32.394896501551735],
          [75.63549507497348, 32.38358995228081],
          [75.59790123342074, 32.37779117289337],
          [75.57558525441684, 32.36909230603966],
          [75.54228294728793, 32.34241056100245],
          [75.50898064015902, 32.319637849319946],
          [75.50125587819613, 32.30106732353492],
          [75.49885261891879, 32.28408937284053],
          [75.49541939137973, 32.25781807519299],
          [75.48546303151645, 32.25288228675611],
          [75.47138679860629, 32.25941489047069],
          [75.46812523244418, 32.27842934944054],
          [75.4717301213602, 32.28829787920779],
          [75.4636620366434, 32.28191248256404],
          [75.4446076238016, 32.27262383033952],
          [75.43190468190707, 32.2652212546927],
          [75.39757240651645, 32.26594702410299],
          [75.3702782475809, 32.25752774212477],
          [75.37182319997348, 32.24155799356213],
          [75.37165153859652, 32.2244236869497],
          [75.35294044850863, 32.21745287515759],
          [75.33165443776645, 32.219340856128674],
          [75.3101967656473, 32.1978446016967],
          [75.31929481862582, 32.17924915014525],
          [75.28393257497348, 32.14393639853108],
          [75.2684830510477, 32.11195420585245],
          [75.26436317800082, 32.10424772939005],
          [75.23157585500277, 32.09086890519205],
          [75.21749962209262, 32.107592129249454],
          [75.19587028859652, 32.083451538945724],
          [75.17389763234652, 32.06832406389516],
          [75.15587318776645, 32.08199708281093],
          [75.10763634084262, 32.07108792409306],
          [75.04120338796176, 32.04271802023438],
          [75.03450859426059, 32.05130266288828],
          [75.02026069997348, 32.04679218832416],
          [75.01253593801059, 32.03733401998448],
          [74.97168053029574, 32.041262916255455],
          [74.9277418508984, 32.064834487209986],
          [74.72174819855465, 31.932065977402313],
          [74.5596998587109, 31.80610815389873],
          [74.48691543488277, 31.72554504815228],
          [74.52948745636715, 31.647250028765786],
          [74.6420973196484, 31.421345070123117],
          [74.55557998566402, 31.358040749643983],
          [74.50339492707027, 31.13261363123265],
          [74.57343276886715, 31.08087753788557],
          [74.67642959503902, 31.12320916567022],
          [74.68466934113277, 31.076172859165837],
          [74.56931289582027, 31.05146947648514],
          [74.36881240753902, 30.879544989210384],
          [74.0982740774609, 30.580889827120355],
          [73.89365371613277, 30.364291083631656]]]),
    col2 = ee.ImageCollection("LANDSAT/LC08/C02/T1_TOA");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var col = ee.ImageCollection('MODIS/006/MOD13A2').select('NDVI');
// Define a mask to clip the NDVI data by.
var punjab = table.filter(ee.Filter.eq('st_nm', 'Punjab'));

col = col.map(function(img) {
  var doy = ee.Date(img.get('system:time_start')).getRelative('day', 'year');
  return img.set('doy', doy);
});
var distinctDOY = col.filterDate('2021-07-01', '2021-12-31');
// Define a filter that identifies which images from the complete collection
// match the DOY from the distinct DOY collection.
var filter = ee.Filter.equals({leftField: 'doy', rightField: 'doy'});

// Define a join.
var join = ee.Join.saveAll('doy_matches');

// Apply the join and convert the resulting FeatureCollection to an
// ImageCollection.
var joinCol = ee.ImageCollection(join.apply(distinctDOY, col, filter));
// Apply median reduction among matching DOY collections.
var comp = joinCol.map(function(img) {
  var doyCol = ee.ImageCollection.fromImages(
    img.get('doy_matches')
  );
  return doyCol.reduce(ee.Reducer.median());
});
// Define RGB visualization parameters.
var visParams = {
  min: 0.0,
  max: 9000.0,
  palette: [
    'FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718', '74A901',
    '66A000', '529400', '3E8601', '207401', '056201', '004C00', '023B01',
    '012E01', '011D01', '011301'
  ],
};

// Create RGB visualization images for use as animation frames.
var rgbVis = comp.map(function(img) {
  return img.visualize(visParams).clip(punjab);
});
// Define GIF visualization parameters.
var gifParams = {
  'region': geometry,
  'dimensions': 600,
  'crs': 'EPSG:3857',
  'framesPerSecond': 10
};

// Print the GIF URL to the console.
print(rgbVis.getVideoThumbURL(gifParams));
// Render the GIF animation in the console.
print(ui.Thumbnail(rgbVis, gifParams));